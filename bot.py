from telethon import TelegramClient, events
import os
from utils.file_processor import process_file

api_id = os.getenv('YOUR_API_ID')
api_hash = os.getenv('YOUR_API_HASH')
bot_token = os.getenv('BOT_TOKEN')

client = TelegramClient('bot', api_id, api_hash).start(bot_token=bot_token)

@client.on(events.NewMessage(pattern='/start'))
async def start(event):
    await event.respond('–ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ .xlsx —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ üìÑ.')
    raise events.StopPropagation

@client.on(events.NewMessage)
async def handle_file(event):
    if event.message.file:
        file_path = await event.message.download_media()
        if file_path.endswith('.xlsx'):
            try:
                results = process_file(file_path)
                response = "\n".join([f"üîπ `{result}`" for result in results])
                
                # –°–æ–∑–¥–∞–Ω–∏–µ .txt —Ñ–∞–π–ª–∞
                txt_file_path = 'results.txt'
                with open(txt_file_path, 'w') as f:
                    for result in results:
                        f.write(f"{result}\n")
                
                await event.respond(response, parse_mode='markdown')
                await event.respond('–í–æ—Ç –≤–∞—à —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ üìÑ:')
                await event.respond(file=txt_file_path)
                
                os.remove(file_path)
                os.remove(txt_file_path)
            except Exception as e:
                await event.respond(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)} ‚ùå')
        else:
            await event.respond('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xlsx ‚ùó.')
    else:
        await event.respond('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ .xlsx —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ üìÑ.')

def main():
    client.run_until_disconnected()

if __name__ == '__main__':
    main()
